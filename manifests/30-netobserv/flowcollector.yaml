kind: FlowCollector
apiVersion: flows.netobserv.io/v1beta2
metadata:
  name: cluster
spec:
  agent:
    ebpf:
      cacheActiveTimeout: 5s
      cacheMaxFlows: 100000
      excludeInterfaces:
        - lo
      imagePullPolicy: IfNotPresent
      interfaces: []
      kafkaBatchSize: 1048576
      logLevel: info
      metrics:
        server:
          port: 9400
      privileged: false
      resources:
        limits:
          memory: 800Mi
        requests:
          cpu: 100m
          memory: 50Mi
      sampling: 50
    type: eBPF
  consolePlugin:
    autoscaler:
      maxReplicas: 3
      metrics:
        - resource:
            name: cpu
            target:
              averageUtilization: 50
              type: Utilization
          type: Resource
      minReplicas: 1
      status: Disabled
    enable: true
    imagePullPolicy: IfNotPresent
    logLevel: info
    portNaming:
      enable: true
      portNames:
        '3100': loki
    quickFilters:
      - default: true
        filter:
          flow_layer: '"app"'
        name: Applications
      - filter:
          flow_layer: '"infra"'
        name: Infrastructure
      - default: true
        filter:
          dst_kind: '"Pod"'
          src_kind: '"Pod"'
        name: Pods network
      - filter:
          dst_kind: '"Service"'
        name: Services network
    replicas: 1
    resources:
      limits:
        memory: 100Mi
      requests:
        cpu: 100m
        memory: 50Mi
  deploymentModel: Direct
  exporters: []
  kafka:
    address: kafka-cluster-kafka-bootstrap.netobserv
    tls:
      caCert:
        certFile: ca.crt
        name: kafka-cluster-cluster-ca-cert
        type: secret
      enable: false
      userCert:
        certFile: user.crt
        certKey: user.key
        name: flp-kafka
        type: secret
    topic: network-flows
  loki:
    enable: true
    lokiStack:
      name: netobserv-loki
    mode: LokiStack
    readTimeout: 30s
    writeBatchSize: 10485760
    writeBatchWait: 1s
    writeTimeout: 10s
  namespace: netobserv
  networkPolicy:
    additionalNamespaces: []
    enable: false
  processor:
    imagePullPolicy: IfNotPresent
    kafkaConsumerAutoscaler: null
    kafkaConsumerBatchSize: 10485760
    kafkaConsumerQueueCapacity: 1000
    kafkaConsumerReplicas: 3
    logLevel: info
    logTypes: Flows
    metrics:
      disableAlerts: []
      server:
        port: 9401
    resources:
      limits:
        memory: 800Mi
      requests:
        cpu: 100m
        memory: 100Mi
  prometheus:
    querier:
      enable: true
      mode: Auto
      timeout: 30s
